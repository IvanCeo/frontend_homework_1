// Умение работать с массивами - это важный навык
// при разработке React-приложений. Часто нужно отрисовать
// список элементов, сделать сортировку или фильтрацию.
// С помощью этих уражнений вы сможете научиться работать
// с массивами на JavaScript, а также привыкнуть к синтаксису
// нового языка программирования.

// Вы можете выполнять упражнения как в песочнице codesandbox,
// так и у себя на компьютере. Чтобы начать работать в codesandbox:
// 1. нажмите Sign In в правом верхнем углу,
// 2. зарегистрируйтесь по гугл-почте или гитхабу,
// 3. затем нажмите Fork также в правом верхнем углу.
// У вас появится своя копия проекта для работы.

// Для работы на своем комьпьютере (если у вас установлена node.js)
// склонируйте репозиторий https://github.com/ivannetreba/foundation-of-frontend.git

// 1. Клонирование массива

// Напишите функцию на JavaScript для клонирования массива.

// Тестовые данные:
// console.log(array_Clone([1, 2, 4, 0]));
// console.log(array_Clone([1, 2, [4, 0]]));

// Ожидаемый вывод:
// [1, 2, 4, 0]
// [1, 2, [4, 0]]

// 2. Первые элементы массива

// Напишите функцию на JavaScript для получения первого элемента массива.
// Передавая параметр 'n', можно получить первые 'n' элементов массива.

// Тестовые данные:
// console.log(first([7, 9, 0, -2]));
// console.log(first([],3));
// console.log(first([7, 9, 0, -2],3));
// console.log(first([7, 9, 0, -2],6));
// console.log(first([7, 9, 0, -2],-3));

// Ожидаемый вывод:
// 7
// []
// [7, 9, 0]
// [7, 9, 0, -2]
// []

// 3. Последние элементы массива

// Напишите функцию на JavaScript для получения последнего элемента массива.
// Передавая параметр 'n', можно получить последние 'n' элементов массива.

// Тестовые данные:
// console.log(last([7, 9, 0, -2]));
// console.log(last([7, 9, 0, -2],3));
// console.log(last([7, 9, 0, -2],6));

// Ожидаемый вывод:
// -2
// [9, 0, -2]
// [7, 9, 0, -2]

// 4. Соединение элементов массива

// Напишите простую программу на JavaScript для объединения
// всех элементов следующего массива в строку.

// Пример массива: `myColor = ["Red", "Green", "White", "Black"];`

// Ожидаемый вывод:
// "Red,Green,White,Black"
// "Red,Green,White,Black"
// "Red+Green+White+Black"

// 5. Вставка дефисов между четными числами

// Напишите программу на JavaScript, которая принимает число
// в качестве ввода и вставляет дефисы (-) между каждым чётным числом.
// Например, если ввести 025468, вывод должен быть 0-254-6-8.

// 6. Сортировка массива

// Напишите программу на JavaScript для сортировки элементов массива.

// Пример массива:
// const arr1 = [ -3, 8, 7, 6, 5, -4, 3, 2, 1 ];

// Ожидаемый вывод:
// -4,-3,1,2,3,5,6,7,8

// 7. Самый частый элемент массива

// Напишите программу на JavaScript для нахождения самого частого элемента в массиве.

// Пример массива:
// const arr1 = [3, 'a', 'a', 'a', 2, 3, 'a', 3, 'a', 2, 4, 9, 3];

// Ожидаемый вывод:
// a ( 5 раз )

// 8. Переключение регистра в строке

// Напишите программу на JavaScript, которая принимает строку и
// меняет регистр каждого символа.
// Например, если ввести 'The Quick Brown Fox',
// вывод должен быть 'tHE qUICK bROWN fOX'.

// 9. Сумма квадратов элементов массива

// Напишите программу на JavaScript для нахождения
// суммы квадратов чисел в массиве.

// 10. Сумма и произведение элементов массива

// Напишите программу на JavaScript для вычисления суммы и
// произведения элементов массива целых чисел.

// 11. Удаление дубликатов

// Напишите программу на JavaScript для удаления дублирующихся
// элементов из массива (игнорируя чувствительность к регистру).

// 12. Вывод цветов с порядковыми номерами

// У нас есть следующие массивы:
// color = ["Blue", "Green", "Red", "Orange", "Violet", "Indigo", "Yellow"];
// o = ["th", "st", "nd", "rd"]
// Напишите программу на JavaScript для отображения цветов в следующем формате:
// "1st choice is Blue."
// "2nd choice is Green."
// "3rd choice is Red."
// Примечание: Используйте порядковые числительные для указания их позиции.
